# -*- coding: utf-8 -*-
"""Example 1: Simple linear regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19LBZygr57zE7J_ODMXi3n9xQHkxENgTn
"""

import pandas as pd
from sklearn.linear_model import LinearRegression

# Create a DataFrame from the dataset
data = {'Hours Studied': [2, 3, 4, 5, 6],
        'Test Score': [60, 70, 80, 90, 95]}
df = pd.DataFrame(data)

# Split the dataset into input features (X) and target variable (y)
X = df[['Hours Studied']]
y = df['Test Score']

# Create a linear regression object
model = LinearRegression()

# Fit the model to the data
model.fit(X, y)

# Predict the test scores for new hours studied
new_hours = [[3.5], [4.5]]
predicted_scores = model.predict(new_hours)

# Print the predicted scores
for hours, score in zip(new_hours, predicted_scores):
    print(f"Hours Studied: {hours[0]}, Predicted Test Score: {score:.2f}")

import seaborn as sns
import matplotlib.pyplot as plt

# Predict the test scores for new hours studied
new_hours = [[3.5], [4.5]]
predicted_scores = model.predict(new_hours)

import numpy as np
predicted_scores= np.array(predicted_scores).reshape([1, -1])
predicted_scores= predicted_scores[0]

new_hours= np.array(new_hours).reshape([1, -1])
new_hours= predicted_scores

# Set a beautiful Seaborn theme
sns.set_theme(style='whitegrid')

# Create a scatter plot with data points
sns.scatterplot(data=df, x='Hours Studied', y='Test Score', label='Data Points')

# Create a regression line
sns.regplot(data=df, x='Hours Studied', y='Test Score', scatter=False, color='steelblue', label='Regression Line')

# Plot the predicted values
sns.scatterplot(x=new_hours, y=predicted_scores, color='red', marker='s', s=100, label='Predicted Values')

# Set plot title and labels
plt.title('Hours Studied vs. Test Score')
plt.xlabel('Hours Studied')
plt.ylabel('Test Score')

# Add a legend
plt.legend()

# Display the plot
plt.show()

